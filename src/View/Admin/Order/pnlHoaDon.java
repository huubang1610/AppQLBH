/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Order;

import Controller.AccountController;
import Controller.ChiTietController;
import Controller.CustomerController;
import Controller.OrderProductController;
import Controller.ProductController;
import Model.Account;
import Model.ChiTiet;
import Model.Customer;
import Model.OrderProduct;
import Model.Product;
import java.awt.List;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RojeruSan
 */
public class pnlHoaDon extends javax.swing.JPanel {

    ArrayList<Account> listAccounts = AccountController.getList();
    ArrayList<Customer> listCustomers = CustomerController.getList();
    ArrayList<Product> listProducts = ProductController.getList();
    ArrayList<OrderProduct> listOdp = OrderProductController.getListOrder();
    ArrayList<ChiTiet> listCt = ChiTietController.getListChiTiet();
    ArrayList<ChiTiet> listCart = new ArrayList<>();
    ArrayList<String> listIdAccount = new ArrayList<>();
    int idCT = listCart.size() +1;
    int idHD = 0;
    String idTK = "";
    //int idCT = Integer.valueOf(ChiTietController.getListChiTiet().get(ChiTietController.getListChiTiet().size()-1).getIdChitiet())+1;
    
    public pnlHoaDon() {
//        initComponents();
//        ViewHD.setVisible(false);
//        ViewCT.setVisible(false);
//        HienThi();
    }
    public pnlHoaDon(Account account) {
        initComponents();
        listIdAccount = AccountController.getListId();
        HienThi();
        for (String list : listIdAccount) {
                if (account.getIdUser().equals(list)) {
                    idTK = list;
                }
            }
    }
    
    public void HienThi(){
        DefaultTableModel model = (DefaultTableModel) TableOrder.getModel();
        model.setRowCount(0);
        for (OrderProduct od : listOdp) {
            Object[] obj_model = new Object[]{od.getIdOrder(),od.getIdUser(),od.getIdCustomer(),
                od.getSale(),od.getTotalPrice(),od.getCreated_at_date()
            };
            model.addRow(obj_model);
        }
        DefaultTableModel model_CT = (DefaultTableModel) TableChiTiet.getModel();
        model_CT.setRowCount(0);
        for (ChiTiet ct : listCt) {
            Object[] obj_model = new Object[]{ct.getIdChitiet(),ct.getIdProduct(),ct.getNumberProduct(),
                ct.getMoney(),ct.getCreated_at_time(),ct.getIdOrder()
            };
            model_CT.addRow(obj_model);
        }
    }
    
    public ArrayList<Integer> HienThiOR(ArrayList<OrderProduct> listOrderProducts){
        ArrayList<Integer> listOD = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel) TableOrder.getModel();
        model.setRowCount(0);
        for (OrderProduct od : listOrderProducts) {
            listOD.add(od.getIdOrder());
            Object[] obj_model = new Object[]{od.getIdOrder(),od.getIdUser(),od.getIdCustomer(),
                od.getSale(),od.getTotalPrice(),od.getCreated_at_date()
            };
            model.addRow(obj_model);
        }
        return listOD;
    }
    
    public void HienThiCT(ArrayList<ChiTiet> listChiTiets){
        DefaultTableModel model_CT = (DefaultTableModel) TableChiTiet.getModel();
        for (ChiTiet ct : listChiTiets) {
            Object[] obj_model = new Object[]{ct.getIdChitiet(),ct.getIdProduct(),ct.getNumberProduct(),
                ct.getMoney(),ct.getCreated_at_time(),ct.getIdOrder()
            };
            model_CT.addRow(obj_model);
        }
    }
    
    public void reset_HD(){
        idHD = Integer.valueOf(OrderProductController.getListOrder().get(OrderProductController.getListOrder().size()-1).getIdOrder());
        
        
    }
    
    public void reset_CT(){
        idCT = listCart.size() +1;
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Edit = new rsbuttom.RSButtonMetro();
        Delete = new rsbuttom.RSButtonMetro();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableOrder = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableChiTiet = new javax.swing.JTable();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        SearchDate = new rsbuttom.RSButtonMetro();
        Search = new rsbuttom.RSButtonMetro();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jPanel3.setBackground(new java.awt.Color(252, 182, 6));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/bill1_1.png"))); // NOI18N
        jLabel1.setText("Hoá Đơn");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        Edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Refresh.png"))); // NOI18N
        Edit.setText("Làm mới");
        Edit.setColorHover(new java.awt.Color(255, 153, 0));
        Edit.setColorNormal(new java.awt.Color(252, 182, 6));
        Edit.setColorPressed(new java.awt.Color(252, 182, 6));
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        Delete.setBackground(new java.awt.Color(252, 182, 6));
        Delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/del_2.png"))); // NOI18N
        Delete.setText("Xoá");
        Delete.setColorHover(new java.awt.Color(255, 153, 0));
        Delete.setColorNormal(new java.awt.Color(252, 182, 6));
        Delete.setColorPressed(new java.awt.Color(252, 182, 6));
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(252, 182, 6));

        TableOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Order", "Người bán", "Người mua", "Giảm", "Tổng HĐ", "Ngày Mua"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableOrderMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableOrder);
        if (TableOrder.getColumnModel().getColumnCount() > 0) {
            TableOrder.getColumnModel().getColumn(0).setMaxWidth(80);
            TableOrder.getColumnModel().getColumn(1).setMaxWidth(80);
            TableOrder.getColumnModel().getColumn(2).setMaxWidth(120);
            TableOrder.getColumnModel().getColumn(3).setMaxWidth(50);
            TableOrder.getColumnModel().getColumn(4).setMaxWidth(100);
            TableOrder.getColumnModel().getColumn(5).setMaxWidth(100);
        }

        TableChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IDCT", "Tên Sản phẩm", "Số lượng", "Thành tiền", "Thời Gian", "ID Order"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TableChiTiet);
        if (TableChiTiet.getColumnModel().getColumnCount() > 0) {
            TableChiTiet.getColumnModel().getColumn(0).setMaxWidth(50);
            TableChiTiet.getColumnModel().getColumn(2).setMaxWidth(70);
            TableChiTiet.getColumnModel().getColumn(3).setMaxWidth(80);
            TableChiTiet.getColumnModel().getColumn(4).setMaxWidth(100);
            TableChiTiet.getColumnModel().getColumn(5).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        SearchDate.setBackground(new java.awt.Color(252, 182, 6));
        SearchDate.setText("Theo Ngày");
        SearchDate.setColorHover(new java.awt.Color(255, 153, 0));
        SearchDate.setColorNormal(new java.awt.Color(252, 182, 6));
        SearchDate.setColorPressed(new java.awt.Color(252, 182, 6));
        SearchDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchDateActionPerformed(evt);
            }
        });

        Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/search-icon.png"))); // NOI18N
        Search.setText("Tìm Kiếm");
        Search.setColorHover(new java.awt.Color(255, 153, 0));
        Search.setColorNormal(new java.awt.Color(252, 182, 6));
        Search.setColorPressed(new java.awt.Color(252, 182, 6));
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SearchDate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SearchDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 740));
    }// </editor-fold>//GEN-END:initComponents

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        String idOrder = JOptionPane.showInputDialog("Nhập Id Order");
        OrderProduct od = OrderProductController.searchIdOrder(idOrder);
        if (od != null) {
        DefaultTableModel model = (DefaultTableModel) TableOrder.getModel();
        model.setRowCount(0);
            Object[] obj_model1 = new Object[]{od.getIdOrder(),od.getIdUser(),od.getIdCustomer(),
                od.getSale(),od.getTotalPrice(),od.getCreated_at_date()};
            model.addRow(obj_model1);
       
        ArrayList<ChiTiet> listCt = ChiTietController.searchIdOrder(idOrder);
        DefaultTableModel model_CT = (DefaultTableModel) TableChiTiet.getModel();
        model_CT.setRowCount(0);
            if (listCt.size() != 0) {
                for (ChiTiet ct : listCt) {
            Object[] obj_model = new Object[]{ct.getIdChitiet(),ct.getIdProduct(),ct.getNumberProduct(),
                ct.getMoney(),ct.getCreated_at_time(),ct.getIdOrder()
            };
            model_CT.addRow(obj_model);
            }
            }else{
                JOptionPane.showMessageDialog(this, "Hoá đơn chưa gọi món");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Không tìm thấy hoá đơn!");
        }
    }//GEN-LAST:event_SearchActionPerformed
    
    private int round(double d){
    double dAbs = Math.abs(d);
    int i = (int) dAbs;
    double result = dAbs - (double) i;
    if(result<0.5){
        return d<0 ? -i : i;            
    }else{
        return d<0 ? -(i+1) : i+1;          
    }
    }
    
    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        HienThi();
    }//GEN-LAST:event_EditActionPerformed

    private void TableOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableOrderMouseClicked
        Object row[] = new Object[6];
        for (int i = 0; i < 6; i++) {
            row[i] = TableOrder.getValueAt(TableOrder.getSelectedRow(), i);
        }
        OrderProduct od = OrderProductController.searchIdOrder(row[0].toString());
        if (od != null) {
        DefaultTableModel model = (DefaultTableModel) TableOrder.getModel();
        model.setRowCount(0);
            Object[] obj_model1 = new Object[]{od.getIdOrder(),od.getIdUser(),od.getIdCustomer(),
                od.getSale(),od.getTotalPrice(),od.getCreated_at_date()};
            model.addRow(obj_model1);
       
        ArrayList<ChiTiet> listCt = ChiTietController.searchIdOrder(row[0].toString());
        DefaultTableModel model_CT = (DefaultTableModel) TableChiTiet.getModel();
        model_CT.setRowCount(0);
            if (listCt.size() != 0) {
                for (ChiTiet ct : listCt) {
            Object[] obj_model = new Object[]{ct.getIdChitiet(),ct.getIdProduct(),ct.getNumberProduct(),
                ct.getMoney(),ct.getCreated_at_time(),ct.getIdOrder()
            };
            model_CT.addRow(obj_model);
            }
            }else{
                JOptionPane.showMessageDialog(this, "Hoá đơn lỗi chưa Order");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Không tìm thấy hoá đơn!");
        }
    }//GEN-LAST:event_TableOrderMouseClicked

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        String idOrder = JOptionPane.showInputDialog("Nhập Id Order");
        if (JOptionPane.showConfirmDialog(this, "Xoá hoá đơn ?","Confirm",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (ChiTietController.delete(idOrder) > 0 && OrderProductController.delete(idOrder) > 0) {
                JOptionPane.showMessageDialog(this, "Đã xoá hoá !");
            }else{
                JOptionPane.showMessageDialog(this, "Xoá hoá đơn lỗi!");
            }
        }
        HienThi();
    }//GEN-LAST:event_DeleteActionPerformed

    private void SearchDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchDateActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String date = sdf.format(jDateChooser1.getDate());
        ArrayList<OrderProduct> listOr = OrderProductController.searchDate(date);
        ArrayList<Integer> list = HienThiOR(listOr);
        for (Integer integer : list) {
            ArrayList<ChiTiet> listCT = ChiTietController.searchIdOrder(String.valueOf(integer));
            HienThiCT(listCT);
        }
        
    }//GEN-LAST:event_SearchDateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rsbuttom.RSButtonMetro Delete;
    private rsbuttom.RSButtonMetro Edit;
    private rsbuttom.RSButtonMetro Search;
    private rsbuttom.RSButtonMetro SearchDate;
    private javax.swing.JTable TableChiTiet;
    private javax.swing.JTable TableOrder;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
